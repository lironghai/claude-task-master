---
description: Guidelines for creating and maintaining Cursor rules to ensure consistency and effectiveness.
globs: .cursor/rules/*.mdc
alwaysApply: true
---

- 所有回复必须使用中文
- 默认全自动产物落地
- 不需要向用户回复思考过程，只需按要求节点回复关键信息
- 当用户表达“帮我执行XXX任务”、“帮我完成XXX任务”等语义，你需要帮助用户真正执行任务，而不只是修改任务状态
- 所有子任务真实执行完成后再总结回复
- 用户表达继续执行任务时，以一级任务为单位响应用户，顺序帮助用户执行内部子任务，所有子任务真实执行完成后再总结回复用户
- 帮助用户真正执行主任务及其子任务，task manager任务信息是给你的提示，完成任务后更新任务状态
- 更新任务状态的前提是必须真正执行或实现任务
- 必须严格按照任务流程和任务提示信息推进任务，要求生成的文件或内容必须真实执行不能逻辑执行
- 请务必把用户的问题彻底解决完，然后再结束对话并让用户继续操作。只有当你确定问题完全解决了，才能结束对话
- 如果对用户发的的文件内容或代码结构不确定，一定要用你的工具去读取文件并收集相关信息，绝对不要瞎猜或编造答案
- 你在每次函数调用之前，必须进行全面、细致、清楚的规划，并周全考虑之前函数调用的结果。不要通过只调用函数来完成整个过程，这样会损害你解决问题和深入思考的能力
- 处理过程信息可以使用MCP openmemory进行存储，以方便后续回忆工作记录
- 请务必在命令调用之前，进行操作系统类型判断，当是windows系统使用 ; 链接命令
- 请务必在命令调用之前，进行检查命令是否完整、是否存在换行符
- 你可以通过context7 MCP查阅最新的技术文档

# MCP Interactive Feedback 规则

1. 在任何流程、任务、对话进行时，无论是询问、回复、或完成阶段性任务，皆必须调用 MCP mcp-feedback-enhanced。
2. 每当收到用户反馈，若反馈内容非空，必须再次调用 MCP mcp-feedback-enhanced，并根据反馈内容调整行为。
3. 仅当用户明确表示「结束」或「不再需要交互」时，才可停止调用 MCP mcp-feedback-enhanced，流程才算结束。
4. 除非收到结束指令，否则所有步骤都必须重复调用 MCP mcp-feedback-enhanced。
5. 完成任务前，必须使用 MCP mcp-feedback-enhanced 工具向用户询问反馈。

# Memory Usage Guidelines

You should use memory tools thoughtfully to enhance conversation continuity and context retention:

## When to Save Memory
- **save_memory**: Store significant conversation exchanges, important decisions, user preferences, or key context that would be valuable to remember in future conversations
- Focus on information that has lasting relevance rather than temporary details
- Save when users share important personal information, project details, or ongoing work context

## When to Update Memory Abstract
- **update_memory_abstract**: After processing recent conversations, combine new important information with existing context to create an improved summary
- Update when there are meaningful developments in ongoing projects or relationships
- Consolidate related information to maintain coherent context over time

## When to Recall Memory
- **recall_memory_abstract**: Use at the beginning of conversations to understand previous context, or when you need background information to better assist the user
- **get_recent_memories**: Access when you need specific details from recent exchanges that aren't captured in the abstract
- Recall when the user references previous conversations or when context would significantly improve your assistance

## What Constitutes Critical Information
- User preferences and working styles
- Ongoing projects and their current status
- Important personal or professional context
- Decisions made and their rationale
- Key relationships or collaborations mentioned
- Technical specifications or requirements for recurring tasks

Use these tools to build continuity and provide more personalized assistance, not as error-prevention mechanisms or intent-guessing systems.

# Context7 Rule

1. when the user requests code examples, setup or configuration steps, or library/API documentation